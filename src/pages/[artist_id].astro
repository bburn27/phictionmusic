---
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import Separator from "../components/Separator.astro";
import AlbumGrid from "../components/AlbumGrid.astro";
import "@fortawesome/fontawesome-free/css/all.min.css";

const imageUrl = "/images/main.jpg";
const title = "PHICTION | About";

export const getStaticPaths = async () => {
  // Fetch all artists from the 'artists' collection
  const artists = await getCollection("artists");

  // Map over the artists to generate paths for each artist's page
  const paths = artists.map((artist) => {
    return {
      params: { artist_id: artist.id }, // URL parameter for the artist's ID
      props: { artists, artist }, // Pass the full artist and all artists as props
    };
  });

  // Return the generated paths to Astro for static page generation
  return paths;
};

type Props = {
  artists: CollectionEntry<"artists">[]; // Array of all artists in the collection
  artist: CollectionEntry<"artists">; // Current artist being rendered
};

const { artists, artist } = Astro.props; // Extract the artists list and current artist from the props

// Extract the ID of the current artist
const artist_id = artist.id;

// Find the index of the current artist in the artists array
const currentArtistIndex = artists.findIndex((a) => a.id === artist_id);

// Calculate the index of the "next" artist in the array (wrap around if at the last artist)
const nextArtistIndex = (currentArtistIndex + 1) % artists.length;

// Get the "next" artist based on the calculated index
const nextArtist = artists[nextArtistIndex];

// Fetch all albums that belong to the current artist
const albums = await getCollection(
  "albums",
  ({ data }) => data.artist.id === artist_id,
);

// Render the content of the current artist (e.g., markdown or MDX)
const { Content } = await render(artist);
---

<BaseLayout title={title}>
  <div class="background-container">
    <img 
      src={imageUrl} 
      alt="PHICTION Official Banner" 
      class="background-image"
    />

    <div class="overlay">
    <div class="content-wrap">
      <div class="image-container">
        <img
        class="image fade-in"
        src={artist.data.image.src}
        alt={artist.data.image.alt}
      />
      </div>
     
      <div class="content">
        <h3>Biography</h3>
        <Content />
        <dl>
          <dt>Genres</dt><dd>{artist.data.genre}</dd>
        </dl>
      </div>
      {
        albums.length > 0 && (
          <div class="albums">
            <h3>Releases</h3>
            <AlbumGrid albums={albums} />
          </div>
        )
      }
    </div>
    </div>
  </div>

</BaseLayout>

<style>

  .overlay {
    height: 100%;
    overflow-y: hidden;
  }

  .background-image {
    object-position: right;
  }

  .image-container {
    overflow: hidden;
    background: transparent;
  }

  .image-container > img {
    height: 100%;
    object-fit: contain;
    background: transparent;
    object-position: top;
  }
  .content-wrap {
    grid-template-areas: "img" "content" "albums";
    grid-template-columns: 100%;
    height: 100%;
    overflow: hidden;
    @media screen and (max-width: 800px) {
      display: flex;
      flex-direction: column;
      height: unset;
    }
    @media screen and (min-width: 50em) {
      grid-template-columns: 30vw 2fr 170px;
      grid-template-areas: "img content albums";
    }
  }
  .albums {
    grid-area: albums;
  }
  .content {
    width: 100%;  
    /* max-width: 80%;   */
    display: block; 
    font-size: 0.75rem;

    @media screen and (max-width: 800px) {
      max-width: 100%;
    }
}

  .content p:last-child {
    margin-top: 1rem;
    display: flex;
  }

  .content h3 {
    margin: 1rem 0;
  }

  @media screen and (max-width: 800px) {
    .content-wrap > img {
      max-width: 500px;
      margin: auto;
    }

    .overlay {
      display: block;
      overflow-y: auto;
    }

    .content {
      font-size: 1rem;
    }
  }

  @media screen and (max-width: 600px) {
    .content-wrap > img {
      max-width: 100%;
      margin: auto;
    }
  }

  @media screen and (min-width: 800px ) and (max-height: 800px) {
    .content {
      font-size: 0.5rem;
    }
  }
</style>
